services:
  db:
    image: postgis/postgis:15-3.4-alpine
    restart: always
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
      JWT_SECRET_KEY: testjwt
      POSTGRES_PASSWORD: example
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 5s
      timeout: 15s
      retries: 100

  server:
    build: ./server
    environment:
      JWT_SECRET_KEY: testjwt
      POSTGRES_PASSWORD: example
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    ports:
      - 4000:4000
    healthcheck:
      test: 'curl --fail --request POST --header ''content-type: application/json'' --url ''http://localhost:4000'' --data ''{"query":"query { __typename }"}'' || exit 1'
      interval: 5s
      timeout: 5s
      retries: 10
    depends_on:
      db:
        condition: service_healthy

  client:
    build: ./client
    environment:
      JWT_SECRET_KEY: testjwt
      POSTGRES_PASSWORD: example
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: "curl --fail --request GET --url 'http://localhost:3000' || exit 1"
      interval: 5s
      timeout: 5s
      retries: 10
    depends_on:
      server:
        condition: service_healthy

  e2e:
    build: ./e2e
    environment:
      JWT_SECRET_KEY: testjwt
      POSTGRES_PASSWORD: example
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./e2e/playwright-report:/app/playwright-report
      - ./e2e/test-results:/app/test-results
    depends_on:
      client:
        condition: service_healthy